"""
0보다 크고 1미만인 십진수 N을 이진수로 바꾸려고 한다. 예를 들어 0.625를 이진 수로 바꾸면 0.101이 된다.

N = 0.625
0.101 (이진수)
= 1*2-1 + 0*2-2 + 1*2-3
= 0.5 + 0 + 0.125
= 0.625

N을 소수점 아래 12자리 이내인 이진수로 표시할 수 있으면 0.을 제외한 나머지 숫자를 출력하고, 13자리 이상이 필요한 경우에는 ‘overflow’를 출력하는 프로그램을 작성하시오.
"""

T = int(input())  # 테스트 케이스 받고

for test_case in range(1, T + 1):  # 범위 돌면서
    N = float(input())  # 숫자 받고
    result = ''  # 2진수 결과 저장할 문자열 만들고
    count = 0  # 소숫점 밑에 몇자리인지 저장할 변수
    while N > 0 and count < 12:  # 카운트 12 안 넘고, N이 아직 0보다 크면 계속 뺑이
        N *= 2  # 이진수 자리 뽑기 (왜 일케 곱하냐면 음수 거듭제곱으로 곱해서 내려가야해서)
        # 음수 거듭제곱으로 뽑는데, 정수자리만 올라가고 소숫점 자리 버려져서 0되거든
        if N >= 1:
            result += '1'  # 1.xxx머시기 나오면 1올려줌
            N -= 1
        else:
            result += '0'  # 0.xxx 머시기 나오면 어차피 못들어가서 0임
        count += 1  # 뭐 아무튼 한자리 내려갔죠? 카운트해주고
    if N != 0:  # 12자리 안에 쇼부못보면
        result = 'overflow'  # 펑
    print(f"#{test_case} {result}")
